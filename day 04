Problem 01: Majority Element

class Solution {
    public int majorityElement(int[] nums) {
        int count = 0;
        int candidate = 0;

        for (int num : nums) {
            if (count == 0) {
                candidate = num;
            }

            if (num == candidate) {
                count++;
            } else {
                count--;
            }
        }

        return candidate;
    }
}

Problem 02 :Minimum Remove to Make Valid Parentheses

class Solution {
    public String minRemoveToMakeValid(String s) {
        StringBuilder sb = new StringBuilder();
        int open = 0;

     
        for (char c : s.toCharArray()) {
            if (c == '(') {
                open++;
                sb.append(c);
            } else if (c == ')') {
                if (open > 0) {
                    open--;
                    sb.append(c);
                }
            
            } else {
                sb.append(c); 
            }
        }

        
        StringBuilder result = new StringBuilder();
        int balance = 0;
        for (int i = sb.length() - 1; i >= 0; i--) {
            char c = sb.charAt(i);
            if (c == '(') {
                if (balance > 0) {
                    balance--;
                    result.append(c);
                }
                // else skip the unmatched '('
            } else if (c == ')') {
                balance++;
                result.append(c);
            } else {
                result.append(c);
            }
        }

        return result.reverse().toString();
    }
}
